#pragma once
#include<string>
#include<iostream>
using namespace std;
#include"uni.h"
class Student : virtual public Universitymember
{
	int courses;
	char **name;
	double* gpa;
public:
	Student(int = 0);
	friend istream& operator>>(istream&, Student&);
	friend ostream& operator<<(ostream&, const Student&);
	virtual bool issuccessful();
	virtual ~Student();
	const Student& operator=(const Student&);
};

#include<string>
#include<iostream>
using namespace std;
#include"student.h"
Student::Student(int c ) :Universitymember()
{
	courses = c;
	if (courses)
	{
		name = new char* [courses];
		for (int i = 0; i < courses; i++)
		{
			name[i] = new char[15];
		}
		for (int i = 0; i < courses; i++)
		{
			
			name[i][0] = '\0';

		}
		gpa = new double[courses];
		for (int i = 0; i < courses; i++)
		{
			gpa[i] = 0.0;
		}
	}
	else
	{
		name = nullptr;
		gpa = nullptr;
	}

}
istream& operator>>(istream& input, Student& s)
{
	input >> (Universitymember&)s;
	cout << "Enter the Number of Courses :";
	input >> s.courses;
	s.name = new char* [s.courses];
	for (int i = 0; i < s.courses; i++)
	{
		s.name[i] = new char[15];
	}
	s.gpa = new double[s.courses];
	for (int i = 0; i < s.courses; i++)
	{
		cout << "Enter the Name of " << i + 1 << " course : ";
		cin >> s.name[i];
		cout << "Enter the GPA of " << i + 1 << " course : ";
		cin >> s.gpa[i];
	}
	return input;
}
ostream& operator<<(ostream& output, const Student& s)
{
	output << "The Data of the Student is " << endl;
	output << (const Universitymember&)s;
	for (int i = 0; i < s.courses; i++)
	{
		output << "Course : " << s.name[i] << endl; 
	    output<<"GPA : " << s.gpa[i]<< endl;

	}
	return output;
}
Student::~Student() 
{
	if (courses)
	{
		for (int i=0;i<courses;i++)
		{
			delete name[i];
		}
		delete[]name;
		delete[]gpa;
	}
}
bool Student::issuccessful()
{
	return false;
}
